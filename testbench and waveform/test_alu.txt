library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

--------------------------------------------------------------

entity test is

end test;

--------------------------------------------------------------

architecture behav of test is
    signal CLK_FREQ : integer := 100e6; --100 MHz
    signal CLK_PER : time := 1000ms/CLK_FREQ; --10ns
    signal CLK : std_logic := '1';
    component alu_control is
      Port (
            CLK, I_en, I_dataDwe : in std_logic;
            I_aluop : in std_logic_vector(3 downto 0);
            I_dataA, I_dataB, I_ImmData : in std_logic_vector(7 downto 0);
            O_dataResult   : out std_logic_vector(7 downto 0);
            O_dataDwe: out std_logic
      );
    end component;
    signal dataDwe : std_logic;
    signal aluop : std_logic_vector(3 downto 0);
    signal dataA, dataB, dataResult, ImmData:std_logic_vector(7 downto 0) :=x"00";
begin
    CLK <= not CLK after CLK_PER/2;
    uut_alu : alu_control port map(
        CLK=>CLK,
        I_en=>'1',
        I_dataDwe=>'0',
        I_aluop=>aluop,
        I_dataA=>dataA,
        I_dataB=>dataB,
        I_ImmData=>ImmData,
        O_dataResult=>dataResult,
        O_dataDwe=>dataDwe
    );
    process
    begin
        wait for 1000ns;
        wait for 2*CLK_PER;
        aluop <= "0000";
        dataA <= x"44";
        dataB <= x"25";
        wait for 2*CLK_PER;
        aluop <= "0001";
        wait for 2*CLK_PER;
        aluop <= "0010";
        wait for 2*CLK_PER;
        aluop <= "0011";
        wait for 2*CLK_PER;
        dataA <= x"de";
        dataB <= x"2c";
        aluop <= "0100";
        wait for 2*CLK_PER;
        aluop <= "0101";
        wait for 2*CLK_PER;
        aluop <= "0110";
        wait for 2*CLK_PER;
        aluop <= "0111";
        wait for 2*CLK_PER;
        aluop <= "1000";
        wait for 2*CLK_PER;
        aluop <= "1001";
        wait for 2*CLK_PER;
        aluop <= "1010";
        wait;
    end process;

end behav;